CREATE TABLE INDIVIDUAL_USER
(
  U_ID INTEGER NOT NULL,
  PRIMARY KEY (U_ID),
  FIRST_NAME VARCHAR(100),
  LAST_NAME VARCHAR(100)
);

CREATE TABLE FOUNDATION
(
  F_ID INTEGER NOT NULL,
  PRIMARY KEY (F_ID),
  NAME VARCHAR (100)
);

CREATE TABLE LEAN_DELEGATE
(
  LD_ID INTEGER NOT NULL,
  PRIMARY KEY (LD_ID),
  L_FIRST_NAME VARCHAR(100),
  L_LAST_NAME VARCHAR(100)
);

CREATE TABLE EVENT
(
  E_ID INTEGER NOT NULL,
  PRIMARY KEY (E_ID),
  TYPE VARCHAR(100),
  NAME VARCHAR(100),
  VENUE VARCHAR(100),
  DAY INTEGER,
  MONTH INTEGER,
  YEAR INTEGER,
  DURATION VARCHAR(100)
);


CREATE TABLE ITEM
(
  I_ID INTEGER NOT NULL,
  PRIMARY KEY (I_ID),
  TYPE VARCHAR(100)
);

CREATE TABLE COUNTRY
(
  CNAME VARCHAR(100) NOT NULL,
  PRIMARY KEY (CNAME)
);

CREATE TABLE TICKETS
(
  T_ID INTEGER NOT NULL,
  E_ID INTEGER NOT NULL,
  PRIMARY KEY (T_ID),
  COST VARCHAR(100),
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE SELL
(
  LD_ID INTEGER null,
  F_ID INTEGER null,
  T_ID INTEGER NOT NULL,
  PRIMARY KEY (T_ID),
  p_ASSIGNED INTEGER null,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE,
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE
);

CREATE TABLE REGISTERS
(
  E_ID INTEGER NOT NULL,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIMARY KEY (E_ID),
  p_REGISTERED INTEGER,
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE BUYS
(
  F_ID INTEGER,
  U_ID INTEGER,
  T_ID INTEGER,
  METHOD_OF_PAYMENT VARCHAR(100) NOT NULL,
  PRIMARY KEY (T_ID, METHOD_OF_PAYMENT),
  NO_OF_TICKETS INTEGER,
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE
  /*FOREIGN KEY (T_ID) REFERENCES TICKETS
  ON DELETE CASCADE*/
);

CREATE TABLE DONATED
(
  F_ID INTEGER,
  U_ID INTEGER,
  E_ID INTEGER NOT NULL,
  PRIMARY KEY (E_ID),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE DONATED_ITEM_DETAILS
(
  F_ID INTEGER,
  U_ID INTEGER,
  E_ID INTEGER NOT NULL,
  DESCRIPTION VARCHAR(100),
  QUANTITY VARCHAR(100),
  PRIMARY KEY (E_ID, DESCRIPTION, QUANTITY),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE DONATED_TAX_BENEFITS
(
  F_ID INTEGER,
  U_ID INTEGER,
  E_ID INTEGER NOT NULL,
  DESCRIPTION VARCHAR(100),
  MONTH INTEGER,
  YEAR INTEGER,
  PRIMARY KEY (E_ID, DESCRIPTION, MONTH, YEAR),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE COLLECTED
(
  I_ID INTEGER NOT NULL,
  E_ID INTEGER NOT NULL,
  PRIMARY KEY (E_ID),
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE,
  FOREIGN KEY (I_ID) REFERENCES ITEM
  ON DELETE CASCADE
);

CREATE TABLE COLLECTED_DETAILS
(
  I_ID INTEGER NOT NULL,
  E_ID INTEGER NOT NULL,
  DESCRIPTION VARCHAR(100),
  QUANTITY VARCHAR(100),
  PRIMARY KEY (E_ID, DESCRIPTION, QUANTITY),
  FOREIGN KEY (I_ID) REFERENCES ITEM
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE SHIPPED
(
  I_ID INTEGER NOT NULL,
  CNAME VARCHAR(100) NOT NULL,
  PRIMARY KEY (I_ID),
  FOREIGN KEY (CNAME) REFERENCES COUNTRY
  ON DELETE CASCADE,
  FOREIGN KEY (I_ID) REFERENCES ITEM
  ON DELETE CASCADE
);

CREATE TABLE SHIPPED_DETAILS
(
  I_ID INTEGER NOT NULL,
  CNAME VARCHAR(100) NOT NULL,
  DAY INTEGER,
  MONTH INTEGER,
  YEAR INTEGER,
  DESCRIPTION VARCHAR(100),
  SHIPPING_COST VARCHAR(100),
  QUANTITY VARCHAR(100),
  PRIMARY KEY (I_ID, DAY, MONTH, YEAR, DESCRIPTION, SHIPPING_COST, QUANTITY),
  FOREIGN KEY (CNAME) REFERENCES COUNTRY
  ON DELETE CASCADE,
  FOREIGN KEY (I_ID) REFERENCES ITEM
  ON DELETE CASCADE
);

CREATE TABLE ACCOUNT
(
  A_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIMARY KEY (A_ID),
  TYPE VARCHAR(100),
  EMAIL VARCHAR(100),
  PASSWORD VARCHAR(100),
  DAY INTEGER,
  MONTH INTEGER,
  YEAR INTEGER,
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
);

CREATE TABLE LOGIN_DETAILS
(
  A_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  DAY INTEGER,
  MONTH INTEGER,
  YEAR INTEGER,
  HOUR INTEGER,
  MINUTE INTEGER,
  SECOND INTEGER,
  PRIMARY KEY (A_ID, DAY, MONTH, YEAR, HOUR, MINUTE, SECOND),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
  /*FOREIGN KEY (A_ID) REFERENCES ACCOUNT
  ON DELETE CASCADE*/
);

CREATE TABLE PRIVILEGES_ASSIGNED
(
  A_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIVILEGES_ASSIGNED VARCHAR(100),
  PRIMARY KEY (A_ID, PRIVILEGES_ASSIGNED),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
  /*FOREIGN KEY (A_ID) REFERENCES ACCOUNT
  ON DELETE CASCADE*/
);

CREATE TABLE SPONSOR
(
  E_ID INTEGER NOT NULL,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIMARY KEY (E_ID),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (E_ID) REFERENCES EVENT
  ON DELETE CASCADE
);

CREATE TABLE BLOG
(
  B_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIMARY KEY (B_ID),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
);

CREATE TABLE WRITES_DETAILS
(
  B_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  TOPIC VARCHAR(100),
  DAY INTEGER,
  MONTH INTEGER,
  YEAR INTEGER,
  PRIMARY KEY (B_ID, TOPIC, DAY, MONTH, YEAR),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
  /*FOREIGN KEY (B_ID) REFERENCES BLOG
  ON DELETE CASCADE*/
);

CREATE TABLE WRITES
(
  B_ID INTEGER NOT NULL,
  LD_ID INTEGER,
  U_ID INTEGER,
  F_ID INTEGER,
  PRIMARY KEY (B_ID),
  FOREIGN KEY (F_ID) REFERENCES FOUNDATION
  ON DELETE CASCADE,
  FOREIGN KEY (U_ID) REFERENCES INDIVIDUAL_USER
  ON DELETE CASCADE,
  FOREIGN KEY (LD_ID) REFERENCES LEAN_DELEGATE
  ON DELETE CASCADE
);
